{"ast":null,"code":"var _jsxFileName = \"/Users/kayladay/Documents/MITxPRO/modules/mod13/build-a-formik-form_starter/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './index.css';\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: '',\n      submitBtn: ''\n    },\n    onSubmit: values => {\n      console.log('form:', values);\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.emailField) errors.emailField = 'Field required';\n      if (!values.pswField) errors.pswField = 'Field required';\n      if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.emailField)) errors.submitBtn = 'Username should be an email';\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"emailField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.emailField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), formik.errors.emailField ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.emailField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 37\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"pswField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.pswField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), formik.errors.pswField ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.pswField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          name: \"submitBtn\",\n          type: \"submit\",\n          value: formik.values.submitBtn,\n          onClick: () => {\n            if (formik.errors.submitBtn) {\n              return alert('Username should be an email');\n            } else if (formik.errors.pswField && formik.errors.emailField) {\n              return alert('Login Successful!');\n            }\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFormik","App","formik","initialValues","emailField","pswField","submitBtn","onSubmit","values","console","log","validate","errors","test","handleSubmit","handleChange","color","alert"],"sources":["/Users/kayladay/Documents/MITxPRO/modules/mod13/build-a-formik-form_starter/src/App.js"],"sourcesContent":["import React from \"react\";\nimport './index.css';\nimport {useFormik} from \"formik\";\n\nfunction App() {\n  const formik = useFormik({\n    initialValues:{\n      emailField: '',\n      pswField: '',\n      submitBtn: ''\n    },\n\n    onSubmit: values => {\n      console.log('form:', values);\n    },\n\n    validate: values =>{\n      let errors = {};\n      if(!values.emailField) errors.emailField = 'Field required';\n      if(!values.pswField) errors.pswField = 'Field required';\n      if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.emailField)) errors.submitBtn = 'Username should be an email';\n      return errors;\n    }\n  });\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n\n        <div>Username</div>\n        <input name=\"emailField\" type=\"text\" onChange={formik.handleChange} value={formik.values.emailField}/>\n\n        {formik.errors.emailField ? <div style={{color:'red'}}>{formik.errors.emailField}</div> : null}\n        \n        <div>Password</div>\n        <input name=\"pswField\" type=\"text\" onChange={formik.handleChange} value={formik.values.pswField}/>\n\n        {formik.errors.pswField ? <div style={{color:'red'}}>{formik.errors.pswField}</div> : null}\n\n        <div style={{color:'red'}}>\n          <button name=\"submitBtn\" type=\"submit\" value={formik.values.submitBtn} onClick={() => {\n            if (formik.errors.submitBtn) {\n              return alert('Username should be an email')\n            } else if (formik.errors.pswField && formik.errors.emailField) {\n              return alert ('Login Successful!')\n            }\n          }}\n          >Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,SAAQC,SAAS,QAAO,QAAQ;AAAC;AAEjC,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,MAAM,GAAGF,SAAS,CAAC;IACvBG,aAAa,EAAC;MACZC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE;IACb,CAAC;IAEDC,QAAQ,EAAEC,MAAM,IAAI;MAClBC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,MAAM,CAAC;IAC9B,CAAC;IAEDG,QAAQ,EAAEH,MAAM,IAAG;MACjB,IAAII,MAAM,GAAG,CAAC,CAAC;MACf,IAAG,CAACJ,MAAM,CAACJ,UAAU,EAAEQ,MAAM,CAACR,UAAU,GAAG,gBAAgB;MAC3D,IAAG,CAACI,MAAM,CAACH,QAAQ,EAAEO,MAAM,CAACP,QAAQ,GAAG,gBAAgB;MACvD,IAAG,CAAC,2CAA2C,CAACQ,IAAI,CAACL,MAAM,CAACJ,UAAU,CAAC,EAAEQ,MAAM,CAACN,SAAS,GAAG,6BAA6B;MACzH,OAAOM,MAAM;IACf;EACF,CAAC,CAAC;EAEF,oBACE;IAAA,uBACE;MAAM,QAAQ,EAAEV,MAAM,CAACY,YAAa;MAAA,wBAElC;QAAA,UAAK;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAM,eACnB;QAAO,IAAI,EAAC,YAAY;QAAC,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEZ,MAAM,CAACa,YAAa;QAAC,KAAK,EAAEb,MAAM,CAACM,MAAM,CAACJ;MAAW;QAAA;QAAA;QAAA;MAAA,QAAE,EAErGF,MAAM,CAACU,MAAM,CAACR,UAAU,gBAAG;QAAK,KAAK,EAAE;UAACY,KAAK,EAAC;QAAK,CAAE;QAAA,UAAEd,MAAM,CAACU,MAAM,CAACR;MAAU;QAAA;QAAA;QAAA;MAAA,QAAO,GAAG,IAAI,eAE9F;QAAA,UAAK;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAM,eACnB;QAAO,IAAI,EAAC,UAAU;QAAC,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEF,MAAM,CAACa,YAAa;QAAC,KAAK,EAAEb,MAAM,CAACM,MAAM,CAACH;MAAS;QAAA;QAAA;QAAA;MAAA,QAAE,EAEjGH,MAAM,CAACU,MAAM,CAACP,QAAQ,gBAAG;QAAK,KAAK,EAAE;UAACW,KAAK,EAAC;QAAK,CAAE;QAAA,UAAEd,MAAM,CAACU,MAAM,CAACP;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAO,GAAG,IAAI,eAE1F;QAAK,KAAK,EAAE;UAACW,KAAK,EAAC;QAAK,CAAE;QAAA,uBACxB;UAAQ,IAAI,EAAC,WAAW;UAAC,IAAI,EAAC,QAAQ;UAAC,KAAK,EAAEd,MAAM,CAACM,MAAM,CAACF,SAAU;UAAC,OAAO,EAAE,MAAM;YACpF,IAAIJ,MAAM,CAACU,MAAM,CAACN,SAAS,EAAE;cAC3B,OAAOW,KAAK,CAAC,6BAA6B,CAAC;YAC7C,CAAC,MAAM,IAAIf,MAAM,CAACU,MAAM,CAACP,QAAQ,IAAIH,MAAM,CAACU,MAAM,CAACR,UAAU,EAAE;cAC7D,OAAOa,KAAK,CAAE,mBAAmB,CAAC;YACpC;UACF,CAAE;UAAA,UACD;QAAM;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACZ;IAAA;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GAhDQhB,GAAG;EAAA,QACKD,SAAS;AAAA;AAAA,KADjBC,GAAG;AAkDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}